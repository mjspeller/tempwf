name: Delphix Profiling

on:
  workflow_dispatch:
    inputs:
      # log_directory:
      #   type: string
      #   required: false
      # report_directory:
      #   type: string
      #   required: false
      # application_name:
      #   type: string
      #   required: false
      # environment_name:
      #   type: string
      #   required: false
      # connector_name:
      #   type: string
      #   required: false
      # connector_type:
      #   type: string
      #   required: false
      # db_host:
      #   type: string
      #   required: false
      # db_port:
      #   type: string
      #   required: false
      # db_name:
      #   type: string
      #   required: false
      # schema_name:
      #   type: string
      #   required: false
      # db_login_id:
      #   type: string
      #   required: false
      db_password:
        type: string
        required: false
      # ruleset_name:
      #   type: string
      #   required: false
      # profiling_job_name:
      #   type: string
      #   required: false
      # profile_set:
      #   type: string
      #   required: false
      # profile_set_name:
      #   type: string
      #   required: false
      # masking_engine_url:
      #   type: string
      #   required: false
      # masking_engine_user:
      #   type: string
      #   required: false
      masking_engine_password:
        type: string
        required: false
      # profile:
      #   type: string
      #   required: false
      # debug:
      #   type: string
      #   required: false

# only allowed a max 10 params

jobs:
  setup:
    name: Setup Delphix Profiling
    runs-on: self-hosted
    steps:
      # - name: Set_environment_variables
      #   run: echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          mkdir -p $PWD/reports
          mkdir -p $PWD/asdd
          rm -rf $PWD/db.sqlite
      - run: |
          pip install -r requirements.txt
      - run: |
          python app/orchestrator.py profile -application_name ${{ github.event.repository.name}}-printergateway -schema_name public -report_directory $PWD/reports -repository_db $PWD/db.sqlite -db_host 10.35.12.159 -db_port 5436 -db_name printergateway -db_login_id sqladmin -ruleset_name rs1 -profiling_job_name profiling_job1 -profile_set $PWD/asdd -profile_set_name "ASDD Standard" -masking_engine_url http://10.35.12.158/masking/ -masking_engine_user rafael_ribeiro -masking_engine_password "${{ inputs.masking_engine_password }}" -db_password "${{ inputs.db_password }}"
        env:
          log_directory: ${{ inputs.log_directory }}
        #   REPO_NAME: ${{ REPO_NAME }}
